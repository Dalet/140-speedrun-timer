# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - refs/heads/*
    - refs/tags/*
  paths:
    exclude:
    - README.md


pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/v') }}:
    buildConfiguration: 'Release'
  ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/tags/v')) }}:
    buildConfiguration: 'Experimental'

steps:
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'


- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.4.4'
    addToPath: true

- script: python -m pip install --upgrade pip
  displayName: 'Install tools'

- script: pip install -r InstallerGUI/requirements.txt
  displayName: 'Install requirements'

- script: pyinstaller -y pyinstaller.spec
  displayName: 'Create installers'
  workingDirectory: $(Build.SourcesDirectory)/InstallerGUI


- task: CopyFiles@2
  inputs:
    sourceFolder: $(system.defaultworkingdirectory)/InstallerGUI/dist/
    contents: '**'
    targetFolder: $(Build.ArtifactStagingDirectory)/installer

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)/installer
    artifactName: 'installer'
    publishLocation: 'Container'


- task: CopyFiles@2
  inputs:
    sourceFolder: $(Build.SourcesDirectory)/140-speedrun-timer/bin/Release/
    contents: 'speedrun-timer.dll'
    targetFolder: $(Build.ArtifactStagingDirectory)/dll

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.ArtifactStagingDirectory)/dll
    artifactName: 'dll'
    publishLocation: 'Container'


- task: GitHubRelease@0
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  inputs:
    gitHubConnection: 'GitHub connection 1'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    title: '$(Build.SourceBranchName)'
    tagSource: auto
    isDraft: true
    assets: |
        $(Build.ArtifactStagingDirectory)/installer/speedrun-timer-installer.exe
