# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

jobs:
- job: Build
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - task: NuGetToolInstaller@0
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

- job: Test
  dependsOn: Build
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - task: VSTest@2
    inputs:
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'

- job: WindowsInstaller
  dependsOn: Test
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.4.4'
      addToPath: true
  - script: python -m pip install --upgrade pip
    displayName: 'Install tools'
  - script: pip install -r InstallerGUI\requirements.txt
    displayName: 'Install requirements'
  - script: pyinstaller -y pyinstaller.spec
    displayName: 'Create installers'
    workingDirectory: $(Build.SourcesDirectory)\InstallerGUI

- job: Artifacts
  dependsOn: WindowsInstaller
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - task: CopyFiles@2
    inputs:
      sourceFolder: $(system.defaultworkingdirectory)
      contents: '**\\InstallerGUI\\dist\\**'
      targetFolder: $(Build.ArtifactStagingDirectory)
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'drop'
      publishLocation: 'Container'

- job: Deploy
  dependsOn: Artifacts
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - task: GitHubRelease@0
    inputs:
      gitHubConnection: 'GitHub connection 1'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'manual'
      tag: '$(Build.BuildNumber)'
      isDraft: true
      assets: |
          $(Build.ArtifactStagingDirectory)\**\InstallerGUI\dist\speedrun-timer-installer.exe
